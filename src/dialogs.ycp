/**
 * File:        firewall/dialogs.ycp
 * Package:     Configuration YaST2 Firewall
 * Summary:     Configuration dialogs and workflow
 * Authors:     Lukas Ocilka <locilka@suse.cz>
 *
 * $Id$
 *
 * Configuration dialogs and workflow.
 * Both Expert and Simple.
 */
{
    textdomain "firewall";

    import "CWM";
    import "CWMServiceStart";
    import "DialogTree";
    import "Label";

    // FIXME: remove
    import "Wizard";

    include "./subdialogs.ycp";
    include "./uifunctions.ycp";

    void FakeStore(string key, map event) {
	y2milestone("Fake Store");
    }

    symbol FakeHandle(string key, map event) {
	y2milestone("Fake Handle");
	return nil;
    }

    void FakeInit(string key) {
	y2milestone("Fake Init");
    }

    boolean FakeFunction () {
	y2milestone("Fake function");
	return true;
    }

    boolean Fake_GetStartService () {
	return true;
    }
    
    boolean Fake_SetStartService (boolean set_service) {
	return true;
    }

    void Fake_SaveAndRestart () {
	boolean amazing = true;
    }

    map<string,map<string,any> > widgets_handling = $[
	"auto_start_up" : CWMServiceStart::CreateAutoStartWidget ($[
	    "get_service_auto_start"	: Fake_GetStartService,
	    "set_service_auto_start"	: Fake_SetStartService,
	    "start_auto_button"		: _("Start Firewall When &Booting"),
	    "start_manual_button"	: _("Start Firewall &Manually"),
	    "help"			: sformat(CWMServiceStart::AutoStartHelpTemplate (),
		// part of help text - radio button label, NO SHORTCUT!!!
		_("Start Firewall when Booting"),
		// part of help text - radio button label, NO SHORTCUT!!!
		_("Start Firewall Manually")
	    )
	]),
	"start_stop" : CWMServiceStart::CreateStartStopWidget ($[
	    "service_id"		: "SuSEfirewall2_final",
					  // Informating label
	    "service_running_label"	: _("Firewall is running"),
					  // Informating label
	    "service_not_running_label"	: _("Firewall is not running"),
					  // Push button
	    "start_now_button"		: _("&Start Firewall Now"),
					  // Push button
	    "stop_now_button"		: _("S&top Firewall Now"),
	    "save_now_action"		: Fake_SaveAndRestart,
					  // Push button
	    "save_now_button"		: _("Save Settings and Restart Firewall &Now"),
	    "help"			: sformat (CWMServiceStart::StartStopHelpTemplate (true),
		// part of help text - push button label, NO SHORTCUT!!!
		_("Start Firewall Now"),
		// part of help text - push button label, NO SHORTCUT!!!
		_("Stop Firewall Now"),
		// part of help text - push button label, NO SHORTCUT!!!
		_("Save Settings and Restart Firewall Now")
	    )
	]),
	"ProposeConfiguration" : $[
	    "widget"		: `custom,
	    "custom_widget"	: `VBox(),
	    "init"		: FakeInit,
	    "handle"		: FakeHandle,
	    "store"		: FakeStore,
	    "help"		: "<p>Fake Help - Propose Configuration</p>",
	],
	"FirewallInterfaces" : $[
	    "widget"		: `custom,
	    "custom_widget"	: `VBox(),
	    "init"		: FakeInit,
	    "handle"		: HandleFirewallInterfaces,
	    "store"		: FakeStore,
	    "help"		: "Fake Help - Firewall Interfaces",
	],
	"AllowedServices" : $[
	    "widget"		: `custom,
	    "custom_widget"	: `VBox(),
	    "init"		: FakeInit,
	    "handle"		: HandleAllowedServices,
	    "store"		: FakeStore,
	    "help"		: "Fake Help - Allowed Services",
	],
	"Masquerading"		: $[
	    "widget"		: `custom,
	    "custom_widget"	: `VBox(),
	    "init"		: FakeInit,
	    "handle"		: FakeHandle,
	    "store"		: FakeStore,
	    "help"		: "Fake Help - BBB",
	],
	"BroadcastConfigurationSimple": $[
	    "widget"		: `custom,
	    "custom_widget"	: `VBox(),
	    "init"		: FakeInit,
	    "handle"		: FakeHandle,
	    "store"		: FakeStore,
	    "help"		: "Fake Help - CCC",
	],
	"IPsecSupport"		: $[
	    "widget"		: `custom,
	    "custom_widget"	: `VBox(),
	    "init"		: FakeInit,
	    "handle"		: HandleIPsecSupport,
	    "store"		: FakeStore,
	    "help"		: "Fake Help - DDD",
	],
	"LoggingLevel"		: $[
	    "widget"		: `custom,
	    "custom_widget"	: `VBox(),
	    "init"		: FakeInit,
	    "handle"		: FakeHandle,
	    "store"		: FakeStore,
	    "help"		: "Fake Help - EEE",
	],
	"RedirectToMasqueradedIP" : $[
	    "widget"		: `custom,
	    "custom_widget"	: `VBox(),
	    "init"		: FakeInit,
	    "handle"		: HandleRedirectToMasqueradedIP,
	    "store"		: FakeStore,
	    "help"		: "Fake Help - FFF",
	],
    ];

    map<string, map<string, any> > tabs = $[
	"start_up"		: $[
	    "contents"		: `VBox (
		"auto_start_up",
		//ProposeConfiguration(),
		"start_stop",
		`VStretch ()
	    ),
	    "caption"		: _("Firewall Configuration") + " - " + _("Start-Up"),
	    "tree_item_label"	: _("Start-Up"),
	    "widget_names"	: [ "auto_start_up", "start_stop" ]
	],
	"interfaces"		: $[
	    "contents"		: `VBox (
		FirewallInterfaces(),
		`VStretch ()
	    ),
	    "caption"		: _("Firewall Configuration") + " - " + _("Interfaces"),
	    "tree_item_label"	: _("Interfaces"),
	    "widget_names"	: [ "FirewallInterfaces" ]
	],
	"allowed_services"	: $[
	    "contents"		: `VBox (
		AllowedServices(),
		`VStretch ()
	    ),
	    "caption"		: _("Firewall Configuration") + " - " + _("Allowed Services"),
	    "tree_item_label"	: _("Allowed Services"),
	    "widget_names"	: [ "AllowedServices" ]
	],
	"masquerading"		: $[
	    "contents"		: `VBox (
		Masquerading(),
		`VSpacing(1),
		RedirectToMasqueradedIP(),
		`VStretch ()
	    ),
	    "caption"		: _("Firewall Configuration") + " - " + _("Network Masquerading"),
	    "tree_item_label"	: _("Masquerading"),
	    "widget_names"	: [ "Masquerading", "RedirectToMasqueradedIP" ]
	],
	"broadcast_simple"	: $[
	    "contents"		: `VBox (
		BroadcastConfigurationSimple(),
		`VStretch ()
	    ),
	    "caption"		: _("Firewall Configuration") + " - " + _("Broadcast Configuration"),
	    "tree_item_label"	: _("Broadcast"),
	    "widget_names"	: [ "BroadcastConfiguration" ]
	],
	"ipsec_support"		: $[
	    "contents"		: `VBox (
		IPsecSupport(),
		`VStretch ()
	    ),
	    "caption"		: _("Firewall Configuration") + " - " + _("IPsec Support"),
	    "tree_item_label"	: _("IPsec Support"),
	    "widget_names"	: [ "IPsecSupport" ]
	],
	"logging_level"		: $[
	    "contents"		: `VBox (
		LoggingLevel(),
		`VStretch ()
	    ),
	    "caption"		: _("Firewall Configuration") + " - " + _("Logging Level"),
	    "tree_item_label"	: _("Logging Level"),
	    "widget_names"	: [ "LoggingLevel" ]
	],
    ];

    map<symbol,any> functions = $[
	`abort : FakeFunction,
    ];

    symbol RunFirewallDialogs () {
	list<string> simple_dialogs = [ "start_up", "interfaces", "allowed_services",
	    "masquerading", "broadcast_simple", "ipsec_support", "logging_level" ];

	return DialogTree::ShowAndRun ($[
	    "ids_order"		: simple_dialogs,
	    "initial_screen"	: "start_up",
	    "screens"		: tabs,
	    "widget_descr"	: widgets_handling,
	    "back_button"	: "",
	    "abort_button"	: Label::AbortButton(),
	    "next_button"	: Label::NextButton(),
	    "functions"		: functions,
	]);
    }

    any ret = nil;
    while (true) {
	ret = RunFirewallDialogs();
	if (ret == `next) {
	    Wizard::CreateDialog();
	    Wizard::SetDesktopIcon("firewall");
	    string caption = _("Firewall Configuration") + " - " + _("Summary");
	    term contents  = BoxSummary();
	    Wizard::SetContentsButtons(caption, contents, "Configuration Summary Help",
		Label::BackButton(), Label::NextButton());
	    Wizard::SetNextButton(`finish, Label::FinishButton());
	    ret = UI::UserInput();
	    y2milestone("Pressed %1", ret);
	    UI::CloseDialog();
	    if (ret == `finish) {
		break;
	    }
	}
    }
}